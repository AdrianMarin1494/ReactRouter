{"ast":null,"code":"var _jsxFileName = \"/home/adrian/Study/Practice/ReactRouter/react_router_second/react_router/src/pages/QuoteDetail.js\",\n  _s = $RefreshSig$();\nimport { Fragment } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport Comments from \"../components/comments/Comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Adrian\",\n  text: \"Learning react\"\n}, {\n  id: \"q2\",\n  author: \"Marin\",\n  text: \"Learning angular\"\n}];\nconst QuoteDetail = () => {\n  _s();\n  const match = useRouteMatch();\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `/quotes/${params.quoteId}/comments`,\n          children: \"Load comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(QuoteDetail, \"rdwgqxZeilGF5b/P9rLFIDXyAnM=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n_c = QuoteDetail;\nexport default QuoteDetail;\nvar _c;\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["Fragment","useParams","Route","Link","useRouteMatch","HighlightedQuote","Comments","jsxDEV","_jsxDEV","DUMMY_QUOTES","id","author","text","QuoteDetail","_s","match","params","quote","find","quoteId","children","fileName","_jsxFileName","lineNumber","columnNumber","path","exact","className","to","_c","$RefreshReg$"],"sources":["/home/adrian/Study/Practice/ReactRouter/react_router_second/react_router/src/pages/QuoteDetail.js"],"sourcesContent":["import { Fragment } from \"react\";\nimport {useParams, Route, Link, useRouteMatch} from \"react-router-dom\";\n\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport Comments from \"../components/comments/Comments\";\n\nconst DUMMY_QUOTES = [\n    {id: \"q1\", author: \"Adrian\", text: \"Learning react\"},\n    {id: \"q2\", author: \"Marin\", text: \"Learning angular\"},\n]\n\nconst QuoteDetail = () => {\n    const match = useRouteMatch();\n    const params = useParams();\n\n    const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n    if(!quote) {\n        return <p>No Quote found</p>;\n    }\n\n    return (\n        <Fragment>\n            <HighlightedQuote text={quote.text} author={quote.author}/>\n            <Route path={`/quotes/${params.quoteId}`} exact>\n                <div className=\"centered\">\n                    <Link className=\"btn--flat\" to={`/quotes/${params.quoteId}/comments`}>\n                        Load comments\n                    </Link>\n                </div>\n            </Route>\n            <Route path={`${match.path}/comments`}>\n                <Comments />\n            </Route>\n        </Fragment>\n    );\n};\n\nexport default QuoteDetail;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAAQC,SAAS,EAAEC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAO,kBAAkB;AAEtE,OAAOC,gBAAgB,MAAM,uCAAuC;AACpE,OAAOC,QAAQ,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,YAAY,GAAG,CACjB;EAACC,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAgB,CAAC,EACpD;EAACF,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAkB,CAAC,CACxD;AAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,KAAK,GAAGX,aAAa,CAAC,CAAC;EAC7B,MAAMY,MAAM,GAAGf,SAAS,CAAC,CAAC;EAE1B,MAAMgB,KAAK,GAAGR,YAAY,CAACS,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACP,EAAE,KAAKM,MAAM,CAACG,OAAO,CAAC;EAErE,IAAG,CAACF,KAAK,EAAE;IACP,oBAAOT,OAAA;MAAAY,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAChC;EAEA,oBACIhB,OAAA,CAACR,QAAQ;IAAAoB,QAAA,gBACLZ,OAAA,CAACH,gBAAgB;MAACO,IAAI,EAAEK,KAAK,CAACL,IAAK;MAACD,MAAM,EAAEM,KAAK,CAACN;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3DhB,OAAA,CAACN,KAAK;MAACuB,IAAI,EAAG,WAAUT,MAAM,CAACG,OAAQ,EAAE;MAACO,KAAK;MAAAN,QAAA,eAC3CZ,OAAA;QAAKmB,SAAS,EAAC,UAAU;QAAAP,QAAA,eACrBZ,OAAA,CAACL,IAAI;UAACwB,SAAS,EAAC,WAAW;UAACC,EAAE,EAAG,WAAUZ,MAAM,CAACG,OAAQ,WAAW;UAAAC,QAAA,EAAC;QAEtE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACRhB,OAAA,CAACN,KAAK;MAACuB,IAAI,EAAG,GAAEV,KAAK,CAACU,IAAK,WAAW;MAAAL,QAAA,eAClCZ,OAAA,CAACF,QAAQ;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEnB,CAAC;AAACV,EAAA,CAzBID,WAAW;EAAA,QACCT,aAAa,EACZH,SAAS;AAAA;AAAA4B,EAAA,GAFtBhB,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}