{"ast":null,"code":"var _jsxFileName = \"/home/adrian/Study/Practice/ReactRouter/react_router_second/react_router/src/pages/QuoteDetail.js\",\n  _s = $RefreshSig$();\nimport { Fragment } from \"react\";\nimport { useParams, Route } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Adrian\",\n  text: \"Learning react\"\n}, {\n  id: \"q2\",\n  author: \"Marin\",\n  text: \"Learning angular\"\n}];\nconst QuoteDetail = () => {\n  _s();\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quote Detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: params.quoteId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(QuoteDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = QuoteDetail;\nexport default QuoteDetail;\nvar _c;\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["Fragment","useParams","Route","Comments","jsxDEV","_jsxDEV","DUMMY_QUOTES","id","author","text","QuoteDetail","_s","params","quote","find","quoteId","children","fileName","_jsxFileName","lineNumber","columnNumber","path","_c","$RefreshReg$"],"sources":["/home/adrian/Study/Practice/ReactRouter/react_router_second/react_router/src/pages/QuoteDetail.js"],"sourcesContent":["import { Fragment } from \"react\";\nimport {useParams, Route} from \"react-router-dom\";\n\nimport Comments from \"../components/comments/Comments\";\n\nconst DUMMY_QUOTES = [\n    {id: \"q1\", author: \"Adrian\", text: \"Learning react\"},\n    {id: \"q2\", author: \"Marin\", text: \"Learning angular\"},\n]\n\nconst QuoteDetail = () => {\n    const params = useParams();\n\n    const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n    return (\n        <Fragment>\n            <h1>Quote Detail</h1>\n            <p>{params.quoteId}</p>\n            <Route path={`/quotes/${params.quoteId}/comments`}>\n                <Comments />\n            </Route>\n        </Fragment>\n    );\n};\n\nexport default QuoteDetail;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAAQC,SAAS,EAAEC,KAAK,QAAO,kBAAkB;AAEjD,OAAOC,QAAQ,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,YAAY,GAAG,CACjB;EAACC,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAgB,CAAC,EACpD;EAACF,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAkB,CAAC,CACxD;AAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,MAAM,GAAGX,SAAS,CAAC,CAAC;EAE1B,MAAMY,KAAK,GAAGP,YAAY,CAACQ,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACN,EAAE,KAAKK,MAAM,CAACG,OAAO,CAAC;EAErE,oBACIV,OAAA,CAACL,QAAQ;IAAAgB,QAAA,gBACLX,OAAA;MAAAW,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBf,OAAA;MAAAW,QAAA,EAAIJ,MAAM,CAACG;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBf,OAAA,CAACH,KAAK;MAACmB,IAAI,EAAG,WAAUT,MAAM,CAACG,OAAQ,WAAW;MAAAC,QAAA,eAC9CX,OAAA,CAACF,QAAQ;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEnB,CAAC;AAACT,EAAA,CAdID,WAAW;EAAA,QACET,SAAS;AAAA;AAAAqB,EAAA,GADtBZ,WAAW;AAgBjB,eAAeA,WAAW;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}